{"version":3,"sources":["constants.js","components/EnsAddress.js","components/Versions.js","components/KnownApps.js","components/Templates.js","App.js","reportWebVitals.js","index.js"],"names":["KNOWN_ADDRESSES","name","domain","type","KNOWN_NETWORKS","Map","ensRegistry","Error","styled","span","EnsAddress","error","address","networkType","shorten","entity","Versions","repo","provider","network","useState","versions","setVersions","a","APM","ensRegistryAddress","apm","appId","utils","namehash","getAllVersions","versionList","reverse","getVersions","length","Box","map","item","mode","version","content","value","location","contractAddress","div","KnownApps","apps","app","index","label","items","Templates","templates","getDomainOwner","eth","ens","registry","getOwner","App","setProvider","setDomain","result","setResult","owner","setOwner","knownAddresses","setKnownAddresses","setNetwork","useEffect","window","ethereum","cancel","handleChainChanged","chainId","console","log","reload","web3","Web3","getChainId","id","connectedNetwork","get","registryAddress","fetchNetwork","on","removeListener","fetchKnownAddresses","Promise","all","ensResolve","currentProvider","message","addresses","fetchDomainData","domainOwner","handleChange","useCallback","val","primary","secondary","wide","onChange","heading","filter","m","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5a7b19d.chunk.js","sourcesContent":["export const KNOWN_ADDRESSES = [\n  { name: 'Agent', domain: 'agent.aragonpm.eth', type: 'app' },\n  { name: 'Finance', domain: 'finance.aragonpm.eth', type: 'app' },\n  {\n    name: 'Fundraising',\n    domain: 'aragon-fundraising.aragonpm.eth',\n    type: 'app',\n  },\n  { name: 'Survey', domain: 'survey.aragonpm.eth', type: 'app' },\n  { name: 'TokenManager', domain: 'token-manager.aragonpm.eth', type: 'app' },\n  { name: 'Vault', domain: 'vault.aragonpm.eth', type: 'app' },\n  { name: 'Voting', domain: 'voting.aragonpm.eth', type: 'app' },\n\n  {\n    name: 'Company',\n    domain: 'company-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Dandelion',\n    domain: 'dandelion-org-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Membership',\n    domain: 'membership-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Reputation',\n    domain: 'reputation-template.aragonpm.eth',\n    type: 'template',\n  },\n  { domain: 'address-book.aragonpm.eth', name: 'Address Book', type: 'app' },\n  { domain: 'allocations.aragonpm.eth', name: 'Allocations', type: 'app' },\n  { domain: 'discussions.aragonpm.eth', name: 'Discussions', type: 'app' },\n  { domain: 'dot-voting.aragonpm.eth', name: 'Dot Voting', type: 'app' },\n  { domain: 'projects.aragonpm.eth', name: 'Projects', type: 'app' },\n  { domain: 'rewards.aragonpm.eth', name: 'Rewards', type: 'app' },\n]\n\nexport const KNOWN_NETWORKS = new Map([\n  [\n    1,\n    {\n      ensRegistry: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n      name: 'Ethereum Mainnet',\n      type: 'main',\n    },\n  ],\n  [\n    4,\n    {\n      ensRegistry: '0x98df287b6c145399aaa709692c8d308357bc085d',\n      name: 'Ethereum Rinkeby Testnet',\n      type: 'rinkeby',\n    },\n  ],\n  [\n    137,\n    {\n      ensRegistry: '0x3c70a0190d09f34519e6e218364451add21b7d4b',\n      name: 'Polygon Mainnet',\n      type: 'matic',\n    },\n  ],\n  [\n    80001,\n    {\n      ensRegistry: '0x431f0eed904590b176f9ff8c36a1c4ff0ee9b982',\n      name: 'Polygon Mumbai Testnet',\n      type: 'mumbai',\n    },\n  ],\n])\n","import { IdentityBadge } from '@aragon/ui'\nimport styled from 'styled-components'\n\nconst Error = styled.span`\n  color: red;\n`\n\nexport function EnsAddress({ error, address, networkType }) {\n  return (\n    <>\n      {error ? (\n        <Error>{error}</Error>\n      ) : (\n        <IdentityBadge\n          shorten={false}\n          entity={address}\n          networkType={networkType}\n        />\n      )}\n    </>\n  )\n}\n","import { useState } from 'react'\nimport APM from '@aragon/apm'\nimport { utils } from 'ethers'\nimport { Tag, TextCopy } from '@aragon/ui'\nimport { EnsAddress } from './EnsAddress'\nimport styled from 'styled-components'\n\nexport function Versions({ repo, provider, network }) {\n  const [versions, setVersions] = useState(null)\n\n  useState(() => {\n    async function getVersions() {\n      const apm = await APM(provider, {\n        ensRegistryAddress: network.ensRegistry,\n      })\n\n      const appId = utils.namehash(repo.domain)\n      try {\n        const versionList = await apm.getAllVersions(appId)\n        setVersions(versionList.reverse())\n      } catch (_) {\n        setVersions([])\n      }\n    }\n\n    getVersions()\n  }, [repo, network])\n\n  if (!versions) {\n    return null\n  }\n\n  if (versions.length === 0) {\n    return <Box>No versions</Box>\n  }\n\n  return (\n    <div>\n      {versions.map((item) => (\n        <Box key={item.version}>\n          <Tag mode=\"new\">{item.version}</Tag>\n          <div>\n            {item.content.provider}:\n            <TextCopy value={item.content.location}></TextCopy>\n          </div>\n          <EnsAddress\n            address={item.contractAddress}\n            networkType={network.type}\n          ></EnsAddress>\n        </Box>\n      ))}\n    </div>\n  )\n}\n\nconst Box = styled.div`\n  padding: 24px;\n`\n","import { Field } from '@aragon/ui'\nimport { Accordion } from '@aragon/ui'\nimport { EnsAddress } from './EnsAddress'\nimport { Versions } from './Versions'\n\nexport function KnownApps({ apps, network, provider }) {\n  return (\n    <ol>\n      {apps.map((app, index) => {\n        return (\n          <li key={index}>\n            <Field label={app.name}>\n              <Accordion\n                items={[\n                  [\n                    <div>\n                      {app.domain} ({' '}\n                      <EnsAddress\n                        error={app.error}\n                        address={app.address}\n                        networkType={network.type}\n                      />\n                      )\n                    </div>,\n                    <Versions\n                      repo={app}\n                      network={network}\n                      provider={provider}\n                    />,\n                  ],\n                ]}\n              />\n            </Field>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n","import { Field } from '@aragon/ui'\nimport { EnsAddress } from './EnsAddress'\n\nexport function Templates({ templates, network }) {\n  return (\n    <ol>\n    {templates\n      .map((app, index) => {\n        return (\n          <li key={index}>\n            <Field label={app.name}>\n              {app.domain} ({' '}\n              <EnsAddress\n                error={app.error}\n                address={app.address}\n                networkType={network.type}\n              />\n              )\n            </Field>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}","import { ensResolve } from '@aragon/wrapper'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Box, Header, Main, Field, SearchInput } from '@aragon/ui'\nimport { KNOWN_ADDRESSES, KNOWN_NETWORKS } from './constants'\nimport Web3 from 'web3'\nimport { KnownApps } from './components/KnownApps'\nimport { EnsAddress } from './components/EnsAddress'\nimport { Templates } from './components/Templates'\n\nasync function getDomainOwner(provider, domain) {\n  return provider.eth.ens.registry.getOwner(domain)\n}\n\nfunction App() {\n  const [provider, setProvider] = useState(null)\n  const [domain, setDomain] = useState('aragonpm.eth')\n  const [result, setResult] = useState({})\n  const [owner, setOwner] = useState({})\n  const [knownAddresses, setKnownAddresses] = useState([])\n  const [network, setNetwork] = useState({})\n\n  useEffect(() => {\n    if (window.ethereum) {\n      let cancel = false\n      function handleChainChanged(chainId) {\n        console.log('chainChanged', chainId)\n        window.location.reload()\n      }\n\n      async function fetchNetwork() {\n        const web3 = new Web3(window.ethereum)\n        const id = await web3.eth.getChainId()\n        if (!cancel) {\n          const connectedNetwork = KNOWN_NETWORKS.get(id)\n          if (connectedNetwork) {\n            web3.eth.ens.registryAddress = connectedNetwork.ensRegistry\n          }\n          setProvider(web3)\n          setNetwork(connectedNetwork || {})\n        }\n      }\n\n      fetchNetwork()\n      window.ethereum.on('chainChanged', handleChainChanged)\n\n      return () => {\n        cancel = true\n        if (window.ethereum.removeListener) {\n          window.ethereum.removeListener('chainChanged', handleChainChanged)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let cancel = false\n\n    if (!provider || !network.ensRegistry) return\n\n    async function fetchKnownAddresses() {\n      const addresses = await Promise.all(\n        KNOWN_ADDRESSES.map(async (app) => {\n          let address\n          let error\n          try {\n            address = await ensResolve(app.domain, {\n              provider: provider.currentProvider,\n              registryAddress: network.ensRegistry,\n            })\n          } catch (e) {\n            error = e.message\n          }\n\n          return { ...app, address, error }\n        })\n      )\n\n      if (!cancel) {\n        setKnownAddresses(addresses)\n      }\n    }\n\n    fetchKnownAddresses()\n\n    return () => {\n      cancel = true\n    }\n  }, [provider, network])\n\n  useEffect(() => {\n    let cancel = false\n    if (!provider || !domain || !network.ensRegistry) return\n\n    async function fetchDomainData() {\n      try {\n        const address = await ensResolve(domain, {\n          provider: provider.currentProvider,\n          registryAddress: network.ensRegistry,\n        })\n\n        if (!cancel) {\n          setResult({ address })\n        }\n      } catch (error) {\n        if (!cancel) setResult({ error: error.message })\n      }\n\n      try {\n        const domainOwner = await getDomainOwner(provider, domain)\n        if (!cancel) {\n          setOwner({ address: domainOwner })\n        }\n      } catch (err) {\n        if (!cancel) setOwner({ error: err.message })\n      }\n    }\n\n    fetchDomainData()\n\n    return () => {\n      cancel = true\n    }\n  }, [domain, provider, network])\n\n  const handleChange = useCallback((val) => {\n    console.log('value', val)\n    setDomain(val)\n  }, [])\n\n  return (\n    <Main>\n      <Header\n        primary=\"Aragon ENS\"\n        secondary={network.name || 'Unsupported network'}\n      />\n      <Box>\n        <Field label=\"Lookup ENS name\">\n          <SearchInput wide value={domain} onChange={handleChange} />\n        </Field>\n\n        <div>\n          <Field label=\"address\">\n            <EnsAddress\n              error={result.error}\n              address={result.address}\n              networkType={network.type}\n            />\n          </Field>\n          <Field label=\"owner\">\n            <EnsAddress\n              error={owner.error}\n              address={owner.address}\n              networkType={owner.type}\n            />\n          </Field>\n        </div>\n      </Box>\n      <Box heading=\"Known Apps:\">\n        <KnownApps\n          apps={knownAddresses.filter((m) => m.type === 'app')}\n          network={network}\n          provider={provider}\n        />\n      </Box>\n      <Box heading=\"Known Templates:\">\n        <Templates\n          templates={knownAddresses.filter((m) => m.type === 'template')}\n          network={network}\n        />\n      </Box>\n    </Main>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}