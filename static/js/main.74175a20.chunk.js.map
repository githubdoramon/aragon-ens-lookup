{"version":3,"sources":["constants.js","App.js","reportWebVitals.js","index.js"],"names":["KNOWN_ADDRESSES","name","domain","type","KNOWN_NETWORKS","Map","ensRegistry","Error","styled","span","App","useState","provider","setProvider","setDomain","result","setResult","knownAddresses","setKnownAddresses","network","setNetwork","useEffect","window","ethereum","cancel","handleChainChanged","chainId","console","log","location","reload","a","web3","Web3","eth","getChainId","id","get","fetchNetwork","on","removeListener","fetchKnownAddresses","Promise","all","map","app","ensResolve","currentProvider","registryAddress","address","message","error","addresses","fetchDomainAddress","handleChange","useCallback","val","primary","secondary","label","wide","value","onChange","heading","filter","m","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74175a20.chunk.js","sourcesContent":["export const KNOWN_ADDRESSES = [\n  { name: 'Agent', domain: 'agent.aragonpm.eth', type: 'app' },\n  { name: 'Finance', domain: 'finance.aragonpm.eth', type: 'app' },\n  {\n    name: 'Fundraising',\n    domain: 'aragon-fundraising.aragonpm.eth',\n    type: 'app',\n  },\n  { name: 'Survey', domain: 'survey.aragonpm.eth', type: 'app' },\n  { name: 'TokenManager', domain: 'token-manager.aragonpm.eth', type: 'app' },\n  { name: 'Vault', domain: 'vault.aragonpm.eth', type: 'app' },\n  { name: 'Voting', domain: 'voting.aragonpm.eth', type: 'app' },\n\n  {\n    name: 'Company',\n    domain: 'company-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Dandelion',\n    domain: 'dandelion-org-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Membership',\n    domain: 'membership-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Reputation',\n    domain: 'reputation-template.aragonpm.eth',\n    type: 'template',\n  },\n]\n\nexport const KNOWN_ENS_REGISTRIES = new Map([\n  [1, '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'],\n  [4, '0x98df287b6c145399aaa709692c8d308357bc085d'],\n  [137, '0x3c70a0190d09f34519e6e218364451add21b7d4b'],\n  [80001, '0x431f0eed904590b176f9ff8c36a1c4ff0ee9b982'],\n])\n\nexport const KNOWN_NETWORKS = new Map([\n  [\n    1,\n    {\n      ensRegistry: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n      name: 'Ethereum Mainnet',\n    },\n  ],\n  [\n    4,\n    {\n      ensRegistry: '0x98df287b6c145399aaa709692c8d308357bc085d',\n      name: 'Ethereum Rinkeby Testnet',\n    },\n  ],\n  [\n    137,\n    {\n      ensRegistry: '0x3c70a0190d09f34519e6e218364451add21b7d4b',\n      name: 'Polygon Mainnet',\n    },\n  ],\n  [\n    80001,\n    {\n      ensRegistry: '0x431f0eed904590b176f9ff8c36a1c4ff0ee9b982',\n      name: 'Polygon Mumbai Testnet',\n    },\n  ],\n])\n","import { ensResolve } from '@aragon/wrapper'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Box, Header, Main, Field, SearchInput } from '@aragon/ui'\nimport { KNOWN_ADDRESSES, KNOWN_NETWORKS } from './constants'\nimport Web3 from 'web3'\nimport styled from 'styled-components'\n\nfunction App() {\n  const [provider, setProvider] = useState(null)\n  const [domain, setDomain] = useState('yuetloo.aragonid.eth')\n  const [result, setResult] = useState({})\n  const [knownAddresses, setKnownAddresses] = useState([])\n  const [network, setNetwork] = useState({})\n\n  useEffect(() => {\n    if (window.ethereum) {\n      let cancel = false\n      function handleChainChanged(chainId) {\n        console.log('chainChanged', chainId)\n        window.location.reload()\n      }\n\n      async function fetchNetwork() {\n        const web3 = new Web3(window.ethereum)\n        const id = await web3.eth.getChainId()\n        if (!cancel) {\n          setProvider(web3)\n          setNetwork(KNOWN_NETWORKS.get(id) || {})\n        }\n      }\n\n      fetchNetwork()\n      window.ethereum.on('chainChanged', handleChainChanged)\n\n      return () => {\n        cancel = true\n        if (window.ethereum.removeListener) {\n          window.ethereum.removeListener('chainChanged', handleChainChanged)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let cancel = false\n\n    if (!provider || !network.ensRegistry) return\n\n    async function fetchKnownAddresses() {\n      const addresses = await Promise.all(\n        KNOWN_ADDRESSES.map(async (app) => {\n          let address\n          let error\n          try {\n            address = await ensResolve(app.domain, {\n              provider: provider.currentProvider,\n              registryAddress: network.ensRegistry,\n            })\n          } catch (e) {\n            address = e.message\n            error = true\n          }\n\n          return { ...app, address, error }\n        })\n      )\n\n      if (!cancel) {\n        setKnownAddresses(addresses)\n      }\n    }\n\n    fetchKnownAddresses()\n\n    return () => {\n      cancel = true\n    }\n  }, [provider, network])\n\n  useEffect(() => {\n    let cancel = false\n    if (!provider || !domain || !network.ensRegistry) return\n\n    async function fetchDomainAddress() {\n      try {\n        const address = await ensResolve(domain, {\n          provider: provider.currentProvider,\n          registryAddress: network.ensRegistry,\n        })\n\n        if (!cancel) {\n          setResult({ address })\n        }\n      } catch (error) {\n        if (!cancel) setResult({ error: error.message })\n      }\n    }\n\n    fetchDomainAddress()\n\n    return () => {\n      cancel = true\n    }\n  }, [domain, provider, network])\n\n  const handleChange = useCallback((val) => {\n    console.log('value', val)\n    setDomain(val)\n  }, [])\n\n  return (\n    <Main>\n      <Header\n        primary=\"Aragon ENS\"\n        secondary={network.name || 'Unsupported network'}\n      />\n      <Box>\n        <Field label=\"address for\">\n          <SearchInput wide value={domain} onChange={handleChange} />\n        </Field>\n\n        <div>\n          {result.error ? <Error>{result.error}</Error> : result.address}\n        </div>\n      </Box>\n      <Box heading=\"Known Apps:\">\n        <ol>\n          {knownAddresses\n            .filter((m) => m.type === 'app')\n            .map((app, index) => {\n              return (\n                <li key={index}>\n                  <Field label={app.name}>\n                    {app.domain} (\n                    {app.error ? <Error>{app.address}</Error> : app.address}))\n                  </Field>\n                </li>\n              )\n            })}\n        </ol>\n      </Box>\n      <Box heading=\"Known Templates:\">\n        <ol>\n          {knownAddresses\n            .filter((m) => m.type === 'template')\n            .map((app, index) => {\n              return (\n                <li key={index}>\n                  <Field label={app.name}>\n                    {app.domain} (\n                    {app.error ? <Error>{app.address}</Error> : app.address})\n                  </Field>\n                </li>\n              )\n            })}\n        </ol>\n      </Box>\n    </Main>\n  )\n}\n\nconst Error = styled.span`\n  color: red;\n`\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}